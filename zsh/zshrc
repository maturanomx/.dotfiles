bindkey -e	# Set editor default keymap to emacs (`-e`) or vi (`-v`)

__getZim () {
	local __zimfw="https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh"
	if (( ${+commands[curl]} )); then
		curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh ${__zimfw}
	else
		mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh ${__zimfw}
	fi
}


zstyle ':zim:input' double-dot-expand yes

# Download zimfw plugin manager if missing
[[ ! -e ${ZIM_HOME}/zimfw.zsh ]] && __getZim
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated
[[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE} ]] && source ${ZIM_HOME}/zimfw.zsh init -q
source ${ZIM_HOME}/init.zsh


zmodload -F zsh/terminfo +p:terminfo
# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
for key ('k') bindkey -M vicmd ${key} history-substring-search-up
for key ('j') bindkey -M vicmd ${key} history-substring-search-down
unset key


eval "$(zoxide init zsh --cmd cd)"

# vim: noet ci pi sts=0 sw=4 ts=4
